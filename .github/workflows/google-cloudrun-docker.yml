name: 'Build and Deploy to Cloud Run'

on:
  push:
    branches:
      - main
  # Manual trigger
  workflow_dispatch:

env:
  PROJECT_ID: 'pulse-439215' 
  PROJECT_NUMBER: '594993328978'
  REGION: 'europe-west2'
  SERVICE: 'ingest-pipeline' 
  DOCKER_REGISTRY_NAME: 'pulse'
  WORKLOAD_IDENTITY_PROVIDER: 'projects/594993328978/locations/global/workloadIdentityPools/github-actions/providers/pulse-repo'
  SERVICE_ACCOUNT_EMAIL: 'github-actions@pulse-439215.iam.gserviceaccount.com'
jobs:
  deploy:
    runs-on: 'ubuntu-latest'

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@v4'

      # Configure Workload Identity Federation and generate an access token.
      #
      # See https://github.com/google-github-actions/auth for more options,
      # including authenticating via a JSON credentials file.
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          token_format: 'access_token'
          service_account: '${{ env.SERVICE_ACCOUNT_EMAIL }}'
          workload_identity_provider: '${{ env.WORKLOAD_IDENTITY_PROVIDER }}'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: 'Docker Auth'
        uses: 'docker/login-action@v3'
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
          registry: '${{ env.REGION }}-docker.pkg.dev'

      - name: Build and Push Container
        run: |-
          docker build -t "${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.DOCKER_REGISTRY_NAME }}/${{ env.SERVICE }}:${{ github.sha }}" ./
          docker push "${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.DOCKER_REGISTRY_NAME }}/${{ env.SERVICE }}:${{ github.sha }}"

      - name: Deploy to Cloud Run
        id: deploy
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          image: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.DOCKER_REGISTRY_NAME }}/${{ env.SERVICE }}:${{ github.sha }}
          flags: --allow-unauthenticated
          secrets: |
            POSTGRES_PASSWORD=projects/${{ env.PROJECT_NUMBER }}/secrets/POSTGRES_PASSWORD
            PGSSLROOTCERT_CONTENT=projects/${{ env.PROJECT_NUMBER }}/secrets/PULSE_DB_SERVER_CA
            PGSSLCERT_CONTENT=projects/${{ env.PROJECT_NUMBER }}/secrets/PULSE_DB_CLIENT_CERT
            PGSSLKEY_CONTENT=projects/${{ env.PROJECT_NUMBER }}/secrets/PULSE_DB_CLIENT_KEY
          env_vars: |
            ENVIRONMENT=production
            POSTGRES_USER=postgres
            POSTGRES_HOST=10.68.80.3
            POSTGRES_DB=pulse
          # NOTE: You can also set env variables here:
          #  env_vars: |
          #  NODE_ENV=production
          #  TOKEN_EXPIRE=6400

      # If required, use the Cloud Run url output in later steps
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}