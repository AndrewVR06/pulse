name: 'Build and Push Celery Image'

on:
  push:
    branches:
      - main
  # Manual trigger
  workflow_dispatch:

env:
  PROJECT_ID: 'pulse-439215'
  PROJECT_NUMBER: '594993328978'
  REGION: 'europe-west2'
  SERVICE: 'celery-image'
  DOCKER_REGISTRY_NAME: 'pulse'
  WORKLOAD_IDENTITY_PROVIDER: 'projects/594993328978/locations/global/workloadIdentityPools/github-actions/providers/pulse-repo'
  SERVICE_ACCOUNT_EMAIL: 'github-actions@pulse-439215.iam.gserviceaccount.com'
jobs:
  deploy:
    runs-on: 'ubuntu-latest'

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@v4'

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          token_format: 'access_token'
          service_account: '${{ env.SERVICE_ACCOUNT_EMAIL }}'
          workload_identity_provider: '${{ env.WORKLOAD_IDENTITY_PROVIDER }}'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: 'Get Production Environment File'
        run: |
          gcloud secrets versions access latest --secret="production-env" > .env.production
          gcloud secrets versions access latest --secret="PULSE_DB_SERVER_CA" > root.crt
          gcloud secrets versions access latest --secret="PULSE_DB_CLIENT_CERT" > client.crt
          gcloud secrets versions access latest --secret="PULSE_DB_CLIENT_KEY" > client.key

      - name: 'Docker Auth'
        uses: 'docker/login-action@v3'
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
          registry: '${{ env.REGION }}-docker.pkg.dev'

      - name: Build and Push Container
        run: |-
          docker build -f Dockerfile.celery --build-arg ENV_FILE=.env.production --build-arg PGSSLROOTCERT=root.crt --build-arg PGSSLCLIENTCERT=client.crt --build-arg PGSSLCLIENTKEY=client.key -t "${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.DOCKER_REGISTRY_NAME }}/${{ env.SERVICE }}:${{ github.sha }}" ./
          docker push "${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.DOCKER_REGISTRY_NAME }}/${{ env.SERVICE }}:${{ github.sha }}"